/**
 * generated by Xtext 2.9.0
 */
package org.xtext.example.mydsl1.aDSL.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl1.aDSL.ADSLPackage;
import org.xtext.example.mydsl1.aDSL.SharedDef;
import org.xtext.example.mydsl1.aDSL.VarDef;
import org.xtext.example.mydsl1.aDSL.VariableType;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Shared Def</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl1.aDSL.impl.SharedDefImpl#isReplicas <em>Replicas</em>}</li>
 *   <li>{@link org.xtext.example.mydsl1.aDSL.impl.SharedDefImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.mydsl1.aDSL.impl.SharedDefImpl#getType <em>Type</em>}</li>
 *   <li>{@link org.xtext.example.mydsl1.aDSL.impl.SharedDefImpl#getSym <em>Sym</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SharedDefImpl extends MemberImpl implements SharedDef
{
  /**
   * The default value of the '{@link #isReplicas() <em>Replicas</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isReplicas()
   * @generated
   * @ordered
   */
  protected static final boolean REPLICAS_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isReplicas() <em>Replicas</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isReplicas()
   * @generated
   * @ordered
   */
  protected boolean replicas = REPLICAS_EDEFAULT;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected VariableType type;

  /**
   * The cached value of the '{@link #getSym() <em>Sym</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSym()
   * @generated
   * @ordered
   */
  protected VarDef sym;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SharedDefImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ADSLPackage.Literals.SHARED_DEF;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isReplicas()
  {
    return replicas;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setReplicas(boolean newReplicas)
  {
    boolean oldReplicas = replicas;
    replicas = newReplicas;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ADSLPackage.SHARED_DEF__REPLICAS, oldReplicas, replicas));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ADSLPackage.SHARED_DEF__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VariableType getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetType(VariableType newType, NotificationChain msgs)
  {
    VariableType oldType = type;
    type = newType;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ADSLPackage.SHARED_DEF__TYPE, oldType, newType);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setType(VariableType newType)
  {
    if (newType != type)
    {
      NotificationChain msgs = null;
      if (type != null)
        msgs = ((InternalEObject)type).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ADSLPackage.SHARED_DEF__TYPE, null, msgs);
      if (newType != null)
        msgs = ((InternalEObject)newType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ADSLPackage.SHARED_DEF__TYPE, null, msgs);
      msgs = basicSetType(newType, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ADSLPackage.SHARED_DEF__TYPE, newType, newType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VarDef getSym()
  {
    if (sym != null && sym.eIsProxy())
    {
      InternalEObject oldSym = (InternalEObject)sym;
      sym = (VarDef)eResolveProxy(oldSym);
      if (sym != oldSym)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, ADSLPackage.SHARED_DEF__SYM, oldSym, sym));
      }
    }
    return sym;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VarDef basicGetSym()
  {
    return sym;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSym(VarDef newSym)
  {
    VarDef oldSym = sym;
    sym = newSym;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ADSLPackage.SHARED_DEF__SYM, oldSym, sym));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ADSLPackage.SHARED_DEF__TYPE:
        return basicSetType(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ADSLPackage.SHARED_DEF__REPLICAS:
        return isReplicas();
      case ADSLPackage.SHARED_DEF__NAME:
        return getName();
      case ADSLPackage.SHARED_DEF__TYPE:
        return getType();
      case ADSLPackage.SHARED_DEF__SYM:
        if (resolve) return getSym();
        return basicGetSym();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ADSLPackage.SHARED_DEF__REPLICAS:
        setReplicas((Boolean)newValue);
        return;
      case ADSLPackage.SHARED_DEF__NAME:
        setName((String)newValue);
        return;
      case ADSLPackage.SHARED_DEF__TYPE:
        setType((VariableType)newValue);
        return;
      case ADSLPackage.SHARED_DEF__SYM:
        setSym((VarDef)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ADSLPackage.SHARED_DEF__REPLICAS:
        setReplicas(REPLICAS_EDEFAULT);
        return;
      case ADSLPackage.SHARED_DEF__NAME:
        setName(NAME_EDEFAULT);
        return;
      case ADSLPackage.SHARED_DEF__TYPE:
        setType((VariableType)null);
        return;
      case ADSLPackage.SHARED_DEF__SYM:
        setSym((VarDef)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ADSLPackage.SHARED_DEF__REPLICAS:
        return replicas != REPLICAS_EDEFAULT;
      case ADSLPackage.SHARED_DEF__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case ADSLPackage.SHARED_DEF__TYPE:
        return type != null;
      case ADSLPackage.SHARED_DEF__SYM:
        return sym != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (replicas: ");
    result.append(replicas);
    result.append(", name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //SharedDefImpl
