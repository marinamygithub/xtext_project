/*
 * generated by Xtext 2.9.0
 */
grammar InternalADSL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl1.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl1.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl1.services.ADSLGrammarAccess;

}

@parser::members {

 	private ADSLGrammarAccess grammarAccess;

    public InternalADSLParser(TokenStream input, ADSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Program";
   	}

   	@Override
   	protected ADSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleProgram
entryRuleProgram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProgramRule()); }
	iv_ruleProgram=ruleProgram
	{ $current=$iv_ruleProgram.current; }
	EOF;

// Rule Program
ruleProgram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='package'
			{
				newLeafNode(otherlv_0, grammarAccess.getProgramAccess().getPackageKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProgramAccess().getNameQualifiedNameParserRuleCall_0_1_0());
					}
					lv_name_1_0=ruleQualifiedName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProgramRule());
						}
						set(
							$current,
							"name",
							lv_name_1_0,
							"org.xtext.example.mydsl1.ADSL.QualifiedName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getProgramAccess().getSemicolonKeyword_0_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getProgramAccess().getImportElementsAbstractElementsParserRuleCall_1_0());
				}
				lv_importElements_3_0=ruleAbstractElements
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProgramRule());
					}
					add(
						$current,
						"importElements",
						lv_importElements_3_0,
						"org.xtext.example.mydsl1.ADSL.AbstractElements");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getProgramAccess().getXclassXClassParserRuleCall_2_0());
				}
				lv_xclass_4_0=ruleXClass
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProgramRule());
					}
					add(
						$current,
						"xclass",
						lv_xclass_4_0,
						"org.xtext.example.mydsl1.ADSL.XClass");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleAbstractElements
entryRuleAbstractElements returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractElementsRule()); }
	iv_ruleAbstractElements=ruleAbstractElements
	{ $current=$iv_ruleAbstractElements.current; }
	EOF;

// Rule AbstractElements
ruleAbstractElements returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getAbstractElementsAccess().getImportKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAbstractElementsAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0());
				}
				lv_importedNamespace_1_0=ruleQualifiedNameWithWildcard
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbstractElementsRule());
					}
					set(
						$current,
						"importedNamespace",
						lv_importedNamespace_1_0,
						"org.xtext.example.mydsl1.ADSL.QualifiedNameWithWildcard");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getAbstractElementsAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); }
	iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard
	{ $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }
	EOF;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0());
		}
		this_QualifiedName_0=ruleQualifiedName
		{
			$current.merge(this_QualifiedName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='.*'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1());
			}
		)?
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleXClass
entryRuleXClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXClassRule()); }
	iv_ruleXClass=ruleXClass
	{ $current=$iv_ruleXClass.current; }
	EOF;

// Rule XClass
ruleXClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='public'
		{
			newLeafNode(otherlv_0, grammarAccess.getXClassAccess().getPublicKeyword_0());
		}
		otherlv_1='class'
		{
			newLeafNode(otherlv_1, grammarAccess.getXClassAccess().getClassKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getXClassAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getXClassRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='extends'
			{
				newLeafNode(otherlv_3, grammarAccess.getXClassAccess().getExtendsKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getXClassRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getXClassAccess().getSuperclassXClassCrossReference_3_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getXClassAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getXClassAccess().getMembersMemberParserRuleCall_5_0());
				}
				lv_members_6_0=ruleMember
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXClassRule());
					}
					add(
						$current,
						"members",
						lv_members_6_0,
						"org.xtext.example.mydsl1.ADSL.Member");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getXClassAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleMember
entryRuleMember returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMemberRule()); }
	iv_ruleMember=ruleMember
	{ $current=$iv_ruleMember.current; }
	EOF;

// Rule Member
ruleMember returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMemberAccess().getVariableDefParserRuleCall_0());
		}
		this_VariableDef_0=ruleVariableDef
		{
			$current = $this_VariableDef_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMemberAccess().getSharedDefParserRuleCall_1());
		}
		this_SharedDef_1=ruleSharedDef
		{
			$current = $this_SharedDef_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMemberAccess().getFuncVarDefParserRuleCall_2());
		}
		this_FuncVarDef_2=ruleFuncVarDef
		{
			$current = $this_FuncVarDef_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMemberAccess().getMethodParserRuleCall_3());
		}
		this_Method_3=ruleMethod
		{
			$current = $this_Method_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMemberAccess().getOperatorParserRuleCall_4());
		}
		this_Operator_4=ruleOperator
		{
			$current = $this_Operator_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMemberAccess().getPrintInstParserRuleCall_5());
		}
		this_PrintInst_5=rulePrintInst
		{
			$current = $this_PrintInst_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMemberAccess().getMainMethodParserRuleCall_6());
		}
		this_MainMethod_6=ruleMainMethod
		{
			$current = $this_MainMethod_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMainMethod
entryRuleMainMethod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMainMethodRule()); }
	iv_ruleMainMethod=ruleMainMethod
	{ $current=$iv_ruleMainMethod.current; }
	EOF;

// Rule MainMethod
ruleMainMethod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='public'
		{
			newLeafNode(otherlv_0, grammarAccess.getMainMethodAccess().getPublicKeyword_0());
		}
		otherlv_1='static'
		{
			newLeafNode(otherlv_1, grammarAccess.getMainMethodAccess().getStaticKeyword_1());
		}
		otherlv_2='def'
		{
			newLeafNode(otherlv_2, grammarAccess.getMainMethodAccess().getDefKeyword_2());
		}
		otherlv_3='main'
		{
			newLeafNode(otherlv_3, grammarAccess.getMainMethodAccess().getMainKeyword_3());
		}
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getMainMethodAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMainMethodAccess().getTypeVariableTypeParserRuleCall_5_0());
				}
				lv_type_5_0=ruleVariableType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMainMethodRule());
					}
					set(
						$current,
						"type",
						lv_type_5_0,
						"org.xtext.example.mydsl1.ADSL.VariableType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getMainMethodAccess().getRightParenthesisKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMainMethodAccess().getBodyBodyParserRuleCall_7_0());
				}
				lv_body_7_0=ruleBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMainMethodRule());
					}
					set(
						$current,
						"body",
						lv_body_7_0,
						"org.xtext.example.mydsl1.ADSL.Body");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePrintInst
entryRulePrintInst returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrintInstRule()); }
	iv_rulePrintInst=rulePrintInst
	{ $current=$iv_rulePrintInst.current; }
	EOF;

// Rule PrintInst
rulePrintInst returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Console'
		{
			newLeafNode(otherlv_0, grammarAccess.getPrintInstAccess().getConsoleKeyword_0());
		}
		(
			otherlv_1='.'
			{
				newLeafNode(otherlv_1, grammarAccess.getPrintInstAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				newLeafNode(this_ID_2, grammarAccess.getPrintInstAccess().getIDTerminalRuleCall_1_1());
			}
		)*
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getPrintInstAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPrintInstAccess().getExpressionExpressionParserRuleCall_3_0());
				}
				lv_expression_4_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrintInstRule());
					}
					set(
						$current,
						"expression",
						lv_expression_4_0,
						"org.xtext.example.mydsl1.ADSL.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getPrintInstAccess().getRightParenthesisKeyword_4());
		}
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getPrintInstAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleMethod
entryRuleMethod returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodRule()); }
	iv_ruleMethod=ruleMethod
	{ $current=$iv_ruleMethod.current; }
	EOF;

// Rule Method
ruleMethod returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='def'
		{
			newLeafNode(otherlv_0, grammarAccess.getMethodAccess().getDefKeyword_0());
		}
		(
			(
				lv_isconst_1_0='const'
				{
					newLeafNode(lv_isconst_1_0, grammarAccess.getMethodAccess().getIsconstConstKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodRule());
					}
					setWithLastConsumed($current, "isconst", true, "const");
				}
			)
		)?
		(
			(
				(
					lv_name_2_1=RULE_ID
					{
						newLeafNode(lv_name_2_1, grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMethodRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_1,
							"org.eclipse.xtext.common.Terminals.ID");
					}
					    |
					lv_name_2_2='this'
					{
						newLeafNode(lv_name_2_2, grammarAccess.getMethodAccess().getNameThisKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMethodRule());
						}
						setWithLastConsumed($current, "name", lv_name_2_2, null);
					}
				)
			)
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getMethodAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodAccess().getParamsParameterParserRuleCall_4_0_0());
					}
					lv_params_4_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodRule());
						}
						add(
							$current,
							"params",
							lv_params_4_0,
							"org.xtext.example.mydsl1.ADSL.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getMethodAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMethodAccess().getParamsParameterParserRuleCall_4_1_1_0());
						}
						lv_params_6_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMethodRule());
							}
							add(
								$current,
								"params",
								lv_params_6_0,
								"org.xtext.example.mydsl1.ADSL.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getMethodAccess().getRightParenthesisKeyword_5());
		}
		(
			(
				(
					lv_istyped_8_0=':'
					{
						newLeafNode(lv_istyped_8_0, grammarAccess.getMethodAccess().getIstypedColonKeyword_6_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMethodRule());
						}
						setWithLastConsumed($current, "istyped", true, ":");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodAccess().getTypeVariableTypeParserRuleCall_6_1_0());
					}
					lv_type_9_0=ruleVariableType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodRule());
						}
						set(
							$current,
							"type",
							lv_type_9_0,
							"org.xtext.example.mydsl1.ADSL.VariableType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodAccess().getBodyBodyParserRuleCall_7_0());
				}
				lv_body_10_0=ruleBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodRule());
					}
					set(
						$current,
						"body",
						lv_body_10_0,
						"org.xtext.example.mydsl1.ADSL.Body");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOperator
entryRuleOperator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperatorRule()); }
	iv_ruleOperator=ruleOperator
	{ $current=$iv_ruleOperator.current; }
	EOF;

// Rule Operator
ruleOperator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='public'
		{
			newLeafNode(otherlv_0, grammarAccess.getOperatorAccess().getPublicKeyword_0());
		}
		otherlv_1='operator'
		{
			newLeafNode(otherlv_1, grammarAccess.getOperatorAccess().getOperatorKeyword_1());
		}
		(
			(
				(
					lv_opName_2_1=RULE_ID
					{
						newLeafNode(lv_opName_2_1, grammarAccess.getOperatorAccess().getOpNameIDTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperatorRule());
						}
						setWithLastConsumed(
							$current,
							"opName",
							lv_opName_2_1,
							"org.eclipse.xtext.common.Terminals.ID");
					}
					    |
					lv_opName_2_2='this'
					{
						newLeafNode(lv_opName_2_2, grammarAccess.getOperatorAccess().getOpNameThisKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperatorRule());
						}
						setWithLastConsumed($current, "opName", lv_opName_2_2, null);
					}
				)
			)
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getOperatorAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getOperatorAccess().getParamsParameterParserRuleCall_4_0_0());
					}
					lv_params_4_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperatorRule());
						}
						add(
							$current,
							"params",
							lv_params_4_0,
							"org.xtext.example.mydsl1.ADSL.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getOperatorAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getOperatorAccess().getParamsParameterParserRuleCall_4_1_1_0());
						}
						lv_params_6_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getOperatorRule());
							}
							add(
								$current,
								"params",
								lv_params_6_0,
								"org.xtext.example.mydsl1.ADSL.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getOperatorAccess().getRightParenthesisKeyword_5());
		}
		otherlv_8='='
		{
			newLeafNode(otherlv_8, grammarAccess.getOperatorAccess().getEqualsSignKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperatorAccess().getExpressionExpressionParserRuleCall_7_0());
				}
				lv_expression_9_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperatorRule());
					}
					set(
						$current,
						"expression",
						lv_expression_9_0,
						"org.xtext.example.mydsl1.ADSL.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10=';'
		{
			newLeafNode(otherlv_10, grammarAccess.getOperatorAccess().getSemicolonKeyword_8());
		}
	)
;

// Entry rule entryRuleFuncVarDef
entryRuleFuncVarDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncVarDefRule()); }
	iv_ruleFuncVarDef=ruleFuncVarDef
	{ $current=$iv_ruleFuncVarDef.current; }
	EOF;

// Rule FuncVarDef
ruleFuncVarDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='val'
		{
			newLeafNode(otherlv_0, grammarAccess.getFuncVarDefAccess().getValKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFuncVarDefAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFuncVarDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getFuncVarDefAccess().getColonKeyword_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getFuncVarDefAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFuncVarDefAccess().getParamsParameterParserRuleCall_4_0_0());
					}
					lv_params_4_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFuncVarDefRule());
						}
						add(
							$current,
							"params",
							lv_params_4_0,
							"org.xtext.example.mydsl1.ADSL.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getFuncVarDefAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFuncVarDefAccess().getParamsParameterParserRuleCall_4_1_1_0());
						}
						lv_params_6_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFuncVarDefRule());
							}
							add(
								$current,
								"params",
								lv_params_6_0,
								"org.xtext.example.mydsl1.ADSL.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getFuncVarDefAccess().getRightParenthesisKeyword_5());
		}
		otherlv_8='=>'
		{
			newLeafNode(otherlv_8, grammarAccess.getFuncVarDefAccess().getEqualsSignGreaterThanSignKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncVarDefAccess().getTypeVariableTypeParserRuleCall_7_0());
				}
				lv_type_9_0=ruleVariableType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncVarDefRule());
					}
					set(
						$current,
						"type",
						lv_type_9_0,
						"org.xtext.example.mydsl1.ADSL.VariableType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='='
		{
			newLeafNode(otherlv_10, grammarAccess.getFuncVarDefAccess().getEqualsSignKeyword_8());
		}
		otherlv_11='('
		{
			newLeafNode(otherlv_11, grammarAccess.getFuncVarDefAccess().getLeftParenthesisKeyword_9());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFuncVarDefAccess().getParamsParameterParserRuleCall_10_0_0());
					}
					lv_params_12_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFuncVarDefRule());
						}
						add(
							$current,
							"params",
							lv_params_12_0,
							"org.xtext.example.mydsl1.ADSL.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_13=','
				{
					newLeafNode(otherlv_13, grammarAccess.getFuncVarDefAccess().getCommaKeyword_10_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFuncVarDefAccess().getParamsParameterParserRuleCall_10_1_1_0());
						}
						lv_params_14_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFuncVarDefRule());
							}
							add(
								$current,
								"params",
								lv_params_14_0,
								"org.xtext.example.mydsl1.ADSL.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_15=')'
		{
			newLeafNode(otherlv_15, grammarAccess.getFuncVarDefAccess().getRightParenthesisKeyword_11());
		}
		otherlv_16='=>'
		{
			newLeafNode(otherlv_16, grammarAccess.getFuncVarDefAccess().getEqualsSignGreaterThanSignKeyword_12());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncVarDefAccess().getBodyBodyParserRuleCall_13_0());
				}
				lv_body_17_0=ruleBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncVarDefRule());
					}
					set(
						$current,
						"body",
						lv_body_17_0,
						"org.xtext.example.mydsl1.ADSL.Body");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_18=';'
		{
			newLeafNode(otherlv_18, grammarAccess.getFuncVarDefAccess().getSemicolonKeyword_14());
		}
	)
;

// Entry rule entryRuleVariableDef
entryRuleVariableDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableDefRule()); }
	iv_ruleVariableDef=ruleVariableDef
	{ $current=$iv_ruleVariableDef.current; }
	EOF;

// Rule VariableDef
ruleVariableDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isstatic_0_0='static'
				{
					newLeafNode(lv_isstatic_0_0, grammarAccess.getVariableDefAccess().getIsstaticStaticKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableDefRule());
					}
					setWithLastConsumed($current, "isstatic", true, "static");
				}
			)
		)?
		(
			(
				(
					lv_vartype_1_1='var'
					{
						newLeafNode(lv_vartype_1_1, grammarAccess.getVariableDefAccess().getVartypeVarKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVariableDefRule());
						}
						setWithLastConsumed($current, "vartype", lv_vartype_1_1, null);
					}
					    |
					lv_vartype_1_2='val'
					{
						newLeafNode(lv_vartype_1_2, grammarAccess.getVariableDefAccess().getVartypeValKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVariableDefRule());
						}
						setWithLastConsumed($current, "vartype", lv_vartype_1_2, null);
					}
				)
			)
		)
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getVariableDefAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				(
					lv_istyped_3_0=':'
					{
						newLeafNode(lv_istyped_3_0, grammarAccess.getVariableDefAccess().getIstypedColonKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVariableDefRule());
						}
						setWithLastConsumed($current, "istyped", true, ":");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getVariableDefAccess().getTypeVariableTypeParserRuleCall_3_1_0());
					}
					lv_type_4_0=ruleVariableType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVariableDefRule());
						}
						set(
							$current,
							"type",
							lv_type_4_0,
							"org.xtext.example.mydsl1.ADSL.VariableType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				(
					lv_isinit_5_0='='
					{
						newLeafNode(lv_isinit_5_0, grammarAccess.getVariableDefAccess().getIsinitEqualsSignKeyword_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVariableDefRule());
						}
						setWithLastConsumed($current, "isinit", true, "=");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getVariableDefAccess().getExpressionArithExpressionParserRuleCall_4_1_0());
					}
					lv_expression_6_0=ruleArithExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVariableDefRule());
						}
						set(
							$current,
							"expression",
							lv_expression_6_0,
							"org.xtext.example.mydsl1.ADSL.ArithExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getVariableDefAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleSharedArrayDef
entryRuleSharedArrayDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSharedArrayDefRule()); }
	iv_ruleSharedArrayDef=ruleSharedArrayDef
	{ $current=$iv_ruleSharedArrayDef.current; }
	EOF;

// Rule SharedArrayDef
ruleSharedArrayDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='shared-val'
		{
			newLeafNode(otherlv_0, grammarAccess.getSharedArrayDefAccess().getSharedValKeyword_0());
		}
		(
			(
				lv_replicas_1_0='replicas'
				{
					newLeafNode(lv_replicas_1_0, grammarAccess.getSharedArrayDefAccess().getReplicasReplicasKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSharedArrayDefRule());
					}
					setWithLastConsumed($current, "replicas", true, "replicas");
				}
			)
		)?
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getSharedArrayDefAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSharedArrayDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getSharedArrayDefAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSharedArrayDefAccess().getTypeVariableTypeParserRuleCall_4_0());
				}
				lv_type_4_0=ruleVariableType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSharedArrayDefRule());
					}
					set(
						$current,
						"type",
						lv_type_4_0,
						"org.xtext.example.mydsl1.ADSL.VariableType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='with'
		{
			newLeafNode(otherlv_5, grammarAccess.getSharedArrayDefAccess().getWithKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSharedArrayDefRule());
					}
				}
				otherlv_6=RULE_ID
				{
					newLeafNode(otherlv_6, grammarAccess.getSharedArrayDefAccess().getSymVarDefCrossReference_6_0());
				}
			)
		)
		otherlv_7='='
		{
			newLeafNode(otherlv_7, grammarAccess.getSharedArrayDefAccess().getEqualsSignKeyword_7());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSharedArrayDefRule());
					}
				}
				otherlv_8=RULE_ID
				{
					newLeafNode(otherlv_8, grammarAccess.getSharedArrayDefAccess().getExpressionVariableDefCrossReference_8_0());
				}
			)
		)
		otherlv_9=';'
		{
			newLeafNode(otherlv_9, grammarAccess.getSharedArrayDefAccess().getSemicolonKeyword_9());
		}
	)
;

// Entry rule entryRuleSharedVarDef
entryRuleSharedVarDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSharedVarDefRule()); }
	iv_ruleSharedVarDef=ruleSharedVarDef
	{ $current=$iv_ruleSharedVarDef.current; }
	EOF;

// Rule SharedVarDef
ruleSharedVarDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='shared-val'
		{
			newLeafNode(otherlv_0, grammarAccess.getSharedVarDefAccess().getSharedValKeyword_0());
		}
		(
			(
				lv_replicas_1_0='replicas'
				{
					newLeafNode(lv_replicas_1_0, grammarAccess.getSharedVarDefAccess().getReplicasReplicasKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSharedVarDefRule());
					}
					setWithLastConsumed($current, "replicas", true, "replicas");
				}
			)
		)?
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getSharedVarDefAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSharedVarDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getSharedVarDefAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSharedVarDefAccess().getTypeVariableTypeParserRuleCall_4_0());
				}
				lv_type_4_0=ruleVariableType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSharedVarDefRule());
					}
					set(
						$current,
						"type",
						lv_type_4_0,
						"org.xtext.example.mydsl1.ADSL.VariableType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='with'
		{
			newLeafNode(otherlv_5, grammarAccess.getSharedVarDefAccess().getWithKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSharedVarDefRule());
					}
				}
				otherlv_6=RULE_ID
				{
					newLeafNode(otherlv_6, grammarAccess.getSharedVarDefAccess().getSymVarDefCrossReference_6_0());
				}
			)
		)
		otherlv_7='='
		{
			newLeafNode(otherlv_7, grammarAccess.getSharedVarDefAccess().getEqualsSignKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSharedVarDefAccess().getExpressionExpressionParserRuleCall_8_0());
				}
				lv_expression_8_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSharedVarDefRule());
					}
					set(
						$current,
						"expression",
						lv_expression_8_0,
						"org.xtext.example.mydsl1.ADSL.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9=';'
		{
			newLeafNode(otherlv_9, grammarAccess.getSharedVarDefAccess().getSemicolonKeyword_9());
		}
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				(
					lv_istyped_1_0=':'
					{
						newLeafNode(lv_istyped_1_0, grammarAccess.getParameterAccess().getIstypedColonKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getParameterRule());
						}
						setWithLastConsumed($current, "istyped", true, ":");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterAccess().getTypeVariableTypeParserRuleCall_1_1_0());
					}
					lv_type_2_0=ruleVariableType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterRule());
						}
						set(
							$current,
							"type",
							lv_type_2_0,
							"org.xtext.example.mydsl1.ADSL.VariableType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleBody
entryRuleBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBodyRule()); }
	iv_ruleBody=ruleBody
	{ $current=$iv_ruleBody.current; }
	EOF;

// Rule Body
ruleBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBodyAccess().getBodyAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getBodyAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBodyAccess().getStatementsStatementParserRuleCall_2_0());
				}
				lv_statements_2_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBodyRule());
					}
					add(
						$current,
						"statements",
						lv_statements_2_0,
						"org.xtext.example.mydsl1.ADSL.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getBodyAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleBlock
entryRuleBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	iv_ruleBlock=ruleBlock
	{ $current=$iv_ruleBlock.current; }
	EOF;

// Rule Block
ruleBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_0_0());
				}
				lv_statements_0_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBlockRule());
					}
					add(
						$current,
						"statements",
						lv_statements_0_0,
						"org.xtext.example.mydsl1.ADSL.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					lv_ispar_1_0='{'
					{
						newLeafNode(lv_ispar_1_0, grammarAccess.getBlockAccess().getIsparLeftCurlyBracketKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBlockRule());
						}
						setWithLastConsumed($current, "ispar", true, "{");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_1_1_0());
					}
					lv_statements_2_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBlockRule());
						}
						add(
							$current,
							"statements",
							lv_statements_2_0,
							"org.xtext.example.mydsl1.ADSL.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_3='}'
			{
				newLeafNode(otherlv_3, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleVariableType
entryRuleVariableType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableTypeRule()); }
	iv_ruleVariableType=ruleVariableType
	{ $current=$iv_ruleVariableType.current; }
	EOF;

// Rule VariableType
ruleVariableType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableTypeRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getVariableTypeAccess().getTypeXClassCrossReference_0_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_isarray_1_0='['
					{
						newLeafNode(lv_isarray_1_0, grammarAccess.getVariableTypeAccess().getIsarrayLeftSquareBracketKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVariableTypeRule());
						}
						setWithLastConsumed($current, "isarray", true, "[");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getVariableTypeAccess().getInnerTypeVariableTypeParserRuleCall_1_1_0());
					}
					lv_innerType_2_0=ruleVariableType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVariableTypeRule());
						}
						set(
							$current,
							"innerType",
							lv_innerType_2_0,
							"org.xtext.example.mydsl1.ADSL.VariableType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=']'
			{
				newLeafNode(otherlv_3, grammarAccess.getVariableTypeAccess().getRightSquareBracketKeyword_1_2());
			}
		)?
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStatementAccess().getAsyncStatParserRuleCall_0());
		}
		this_AsyncStat_0=ruleAsyncStat
		{
			$current = $this_AsyncStat_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getFinishStatParserRuleCall_1());
		}
		this_FinishStat_1=ruleFinishStat
		{
			$current = $this_FinishStat_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getAtStatParserRuleCall_2());
		}
		this_AtStat_2=ruleAtStat
		{
			$current = $this_AtStat_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getSharedDefParserRuleCall_3());
		}
		this_SharedDef_3=ruleSharedDef
		{
			$current = $this_SharedDef_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getVariableDefParserRuleCall_4());
		}
		this_VariableDef_4=ruleVariableDef
		{
			$current = $this_VariableDef_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getFuncVarDefParserRuleCall_5());
		}
		this_FuncVarDef_5=ruleFuncVarDef
		{
			$current = $this_FuncVarDef_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getPrintInstParserRuleCall_6());
		}
		this_PrintInst_6=rulePrintInst
		{
			$current = $this_PrintInst_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_7());
		}
		this_IfStatement_7=ruleIfStatement
		{
			$current = $this_IfStatement_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getFor2StatementParserRuleCall_8());
		}
		this_For2Statement_8=ruleFor2Statement
		{
			$current = $this_For2Statement_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getForStatementParserRuleCall_9());
		}
		this_ForStatement_9=ruleForStatement
		{
			$current = $this_ForStatement_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_10());
		}
		this_WhileStatement_10=ruleWhileStatement
		{
			$current = $this_WhileStatement_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_11());
		}
		this_ReturnStatement_11=ruleReturnStatement
		{
			$current = $this_ReturnStatement_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getTryCatchBlockParserRuleCall_12());
		}
		this_TryCatchBlock_12=ruleTryCatchBlock
		{
			$current = $this_TryCatchBlock_12.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getAtomicStatementParserRuleCall_13());
		}
		this_AtomicStatement_13=ruleAtomicStatement
		{
			$current = $this_AtomicStatement_13.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getWhenStatementParserRuleCall_14());
		}
		this_WhenStatement_14=ruleWhenStatement
		{
			$current = $this_WhenStatement_14.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			{
				newCompositeNode(grammarAccess.getStatementAccess().getExpressionParserRuleCall_15_0());
			}
			this_Expression_15=ruleExpression
			{
				$current = $this_Expression_15.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_16=';'
			{
				newLeafNode(otherlv_16, grammarAccess.getStatementAccess().getSemicolonKeyword_15_1());
			}
		)
	)
;

// Entry rule entryRuleAsyncStat
entryRuleAsyncStat returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAsyncStatRule()); }
	iv_ruleAsyncStat=ruleAsyncStat
	{ $current=$iv_ruleAsyncStat.current; }
	EOF;

// Rule AsyncStat
ruleAsyncStat returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='async'
		{
			newLeafNode(otherlv_0, grammarAccess.getAsyncStatAccess().getAsyncKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAsyncStatAccess().getBodyBlockParserRuleCall_1_0());
				}
				lv_body_1_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAsyncStatRule());
					}
					set(
						$current,
						"body",
						lv_body_1_0,
						"org.xtext.example.mydsl1.ADSL.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFinishStat
entryRuleFinishStat returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFinishStatRule()); }
	iv_ruleFinishStat=ruleFinishStat
	{ $current=$iv_ruleFinishStat.current; }
	EOF;

// Rule FinishStat
ruleFinishStat returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='finish'
		{
			newLeafNode(otherlv_0, grammarAccess.getFinishStatAccess().getFinishKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFinishStatAccess().getBodyBlockParserRuleCall_1_0());
				}
				lv_body_1_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFinishStatRule());
					}
					set(
						$current,
						"body",
						lv_body_1_0,
						"org.xtext.example.mydsl1.ADSL.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAtStat
entryRuleAtStat returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtStatRule()); }
	iv_ruleAtStat=ruleAtStat
	{ $current=$iv_ruleAtStat.current; }
	EOF;

// Rule AtStat
ruleAtStat returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='at'
		{
			newLeafNode(otherlv_0, grammarAccess.getAtStatAccess().getAtKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getAtStatAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAtStatAccess().getExpSelectionExpressionParserRuleCall_2_0());
				}
				lv_exp_2_0=ruleSelectionExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAtStatRule());
					}
					set(
						$current,
						"exp",
						lv_exp_2_0,
						"org.xtext.example.mydsl1.ADSL.SelectionExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getAtStatAccess().getRightParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAtStatAccess().getBodyBlockParserRuleCall_4_0());
				}
				lv_body_4_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAtStatRule());
					}
					set(
						$current,
						"body",
						lv_body_4_0,
						"org.xtext.example.mydsl1.ADSL.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAtomicStatement
entryRuleAtomicStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomicStatementRule()); }
	iv_ruleAtomicStatement=ruleAtomicStatement
	{ $current=$iv_ruleAtomicStatement.current; }
	EOF;

// Rule AtomicStatement
ruleAtomicStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='atomic'
		{
			newLeafNode(otherlv_0, grammarAccess.getAtomicStatementAccess().getAtomicKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAtomicStatementAccess().getStatementStatementParserRuleCall_1_0());
				}
				lv_statement_1_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAtomicStatementRule());
					}
					set(
						$current,
						"statement",
						lv_statement_1_0,
						"org.xtext.example.mydsl1.ADSL.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleWhenStatement
entryRuleWhenStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhenStatementRule()); }
	iv_ruleWhenStatement=ruleWhenStatement
	{ $current=$iv_ruleWhenStatement.current; }
	EOF;

// Rule WhenStatement
ruleWhenStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='when'
		{
			newLeafNode(otherlv_0, grammarAccess.getWhenStatementAccess().getWhenKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getWhenStatementAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhenStatementAccess().getExpressionEqualityParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleEquality
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhenStatementRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"org.xtext.example.mydsl1.ADSL.Equality");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getWhenStatementAccess().getRightParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhenStatementAccess().getStatementStatementParserRuleCall_4_0());
				}
				lv_statement_4_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhenStatementRule());
					}
					set(
						$current,
						"statement",
						lv_statement_4_0,
						"org.xtext.example.mydsl1.ADSL.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFor2Statement
entryRuleFor2Statement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFor2StatementRule()); }
	iv_ruleFor2Statement=ruleFor2Statement
	{ $current=$iv_ruleFor2Statement.current; }
	EOF;

// Rule For2Statement
ruleFor2Statement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='for'
		{
			newLeafNode(otherlv_0, grammarAccess.getFor2StatementAccess().getForKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getFor2StatementAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFor2StatementAccess().getParParameterParserRuleCall_2_0());
				}
				lv_par_2_0=ruleParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFor2StatementRule());
					}
					set(
						$current,
						"par",
						lv_par_2_0,
						"org.xtext.example.mydsl1.ADSL.Parameter");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='in'
		{
			newLeafNode(otherlv_3, grammarAccess.getFor2StatementAccess().getInKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFor2StatementAccess().getDataTerminalExpressionParserRuleCall_4_0());
				}
				lv_data_4_0=ruleTerminalExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFor2StatementRule());
					}
					set(
						$current,
						"data",
						lv_data_4_0,
						"org.xtext.example.mydsl1.ADSL.TerminalExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getFor2StatementAccess().getRightParenthesisKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFor2StatementAccess().getBodyBlockParserRuleCall_6_0());
				}
				lv_body_6_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFor2StatementRule());
					}
					set(
						$current,
						"body",
						lv_body_6_0,
						"org.xtext.example.mydsl1.ADSL.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTryCatchBlock
entryRuleTryCatchBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTryCatchBlockRule()); }
	iv_ruleTryCatchBlock=ruleTryCatchBlock
	{ $current=$iv_ruleTryCatchBlock.current; }
	EOF;

// Rule TryCatchBlock
ruleTryCatchBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTryCatchBlockAccess().getTryCatchStatAction_0(),
					$current);
			}
		)
		otherlv_1='try'
		{
			newLeafNode(otherlv_1, grammarAccess.getTryCatchBlockAccess().getTryKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTryCatchBlockAccess().getBodyTryBodyParserRuleCall_2_0());
				}
				lv_bodyTry_2_0=ruleBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTryCatchBlockRule());
					}
					set(
						$current,
						"bodyTry",
						lv_bodyTry_2_0,
						"org.xtext.example.mydsl1.ADSL.Body");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='catch'
		{
			newLeafNode(otherlv_3, grammarAccess.getTryCatchBlockAccess().getCatchKeyword_3());
		}
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getTryCatchBlockAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				lv_name_5_0=RULE_ID
				{
					newLeafNode(lv_name_5_0, grammarAccess.getTryCatchBlockAccess().getNameIDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTryCatchBlockRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_5_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getTryCatchBlockAccess().getRightParenthesisKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTryCatchBlockAccess().getBodyCatchBodyParserRuleCall_7_0());
				}
				lv_bodyCatch_7_0=ruleBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTryCatchBlockRule());
					}
					set(
						$current,
						"bodyCatch",
						lv_bodyCatch_7_0,
						"org.xtext.example.mydsl1.ADSL.Body");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleWhileStatement
entryRuleWhileStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhileStatementRule()); }
	iv_ruleWhileStatement=ruleWhileStatement
	{ $current=$iv_ruleWhileStatement.current; }
	EOF;

// Rule WhileStatement
ruleWhileStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getWhileStatementAccess().getWhileStatAction_0(),
					$current);
			}
		)
		otherlv_1='while'
		{
			newLeafNode(otherlv_1, grammarAccess.getWhileStatementAccess().getWhileKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileStatementAccess().getExpressionExpressionParserRuleCall_3_0());
				}
				lv_expression_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileStatementRule());
					}
					set(
						$current,
						"expression",
						lv_expression_3_0,
						"org.xtext.example.mydsl1.ADSL.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileStatementAccess().getBodyBodyParserRuleCall_5_0());
				}
				lv_body_5_0=ruleBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileStatementRule());
					}
					set(
						$current,
						"body",
						lv_body_5_0,
						"org.xtext.example.mydsl1.ADSL.Body");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleForStatement
entryRuleForStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForStatementRule()); }
	iv_ruleForStatement=ruleForStatement
	{ $current=$iv_ruleForStatement.current; }
	EOF;

// Rule ForStatement
ruleForStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getForStatementAccess().getForStatAction_0(),
					$current);
			}
		)
		otherlv_1='for'
		{
			newLeafNode(otherlv_1, grammarAccess.getForStatementAccess().getForKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForStatementAccess().getTempVariableDefParserRuleCall_3_0());
				}
				lv_temp_3_0=ruleVariableDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStatementRule());
					}
					set(
						$current,
						"temp",
						lv_temp_3_0,
						"org.xtext.example.mydsl1.ADSL.VariableDef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getForStatementAccess().getConditionArithExpressionParserRuleCall_4_0());
				}
				lv_condition_4_0=ruleArithExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStatementRule());
					}
					set(
						$current,
						"condition",
						lv_condition_4_0,
						"org.xtext.example.mydsl1.ADSL.ArithExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getForStatementAccess().getSemicolonKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForStatementAccess().getFinalexpExpressionParserRuleCall_6_0());
				}
				lv_finalexp_6_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStatementRule());
					}
					set(
						$current,
						"finalexp",
						lv_finalexp_6_0,
						"org.xtext.example.mydsl1.ADSL.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getForStatementAccess().getRightParenthesisKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForStatementAccess().getBodyBlockParserRuleCall_8_0());
				}
				lv_body_8_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStatementRule());
					}
					set(
						$current,
						"body",
						lv_body_8_0,
						"org.xtext.example.mydsl1.ADSL.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleReturnStatement
entryRuleReturnStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnStatementRule()); }
	iv_ruleReturnStatement=ruleReturnStatement
	{ $current=$iv_ruleReturnStatement.current; }
	EOF;

// Rule ReturnStatement
ruleReturnStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getReturnStatementAccess().getReturnStatAction_0(),
					$current);
			}
		)
		otherlv_1='return'
		{
			newLeafNode(otherlv_1, grammarAccess.getReturnStatementAccess().getReturnKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReturnStatementAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReturnStatementRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"org.xtext.example.mydsl1.ADSL.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getReturnStatementAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleSharedDef
entryRuleSharedDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSharedDefRule()); }
	iv_ruleSharedDef=ruleSharedDef
	{ $current=$iv_ruleSharedDef.current; }
	EOF;

// Rule SharedDef
ruleSharedDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(ruleSharedArrayDef)=>
			{
				newCompositeNode(grammarAccess.getSharedDefAccess().getSharedArrayDefParserRuleCall_0());
			}
			this_SharedArrayDef_0=ruleSharedArrayDef
			{
				$current = $this_SharedArrayDef_0.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getSharedDefAccess().getSharedVarDefParserRuleCall_1());
		}
		this_SharedVarDef_1=ruleSharedVarDef
		{
			$current = $this_SharedVarDef_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIfStatement
entryRuleIfStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfStatementRule()); }
	iv_ruleIfStatement=ruleIfStatement
	{ $current=$iv_ruleIfStatement.current; }
	EOF;

// Rule IfStatement
ruleIfStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIfStatementAccess().getIfStatAction_0(),
					$current);
			}
		)
		otherlv_1='if'
		{
			newLeafNode(otherlv_1, grammarAccess.getIfStatementAccess().getIfKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStatementAccess().getExpressionArithExpressionParserRuleCall_3_0());
				}
				lv_expression_3_0=ruleArithExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStatementRule());
					}
					set(
						$current,
						"expression",
						lv_expression_3_0,
						"org.xtext.example.mydsl1.ADSL.ArithExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStatementAccess().getThenBlockBlockParserRuleCall_5_0());
				}
				lv_thenBlock_5_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStatementRule());
					}
					set(
						$current,
						"thenBlock",
						lv_thenBlock_5_0,
						"org.xtext.example.mydsl1.ADSL.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				((
					'else'
				)
				)=>
				(
					lv_iselse_6_0='else'
					{
						newLeafNode(lv_iselse_6_0, grammarAccess.getIfStatementAccess().getIselseElseKeyword_6_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIfStatementRule());
						}
						setWithLastConsumed($current, "iselse", true, "else");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getIfStatementAccess().getElseBlockBlockParserRuleCall_6_1_0());
					}
					lv_elseBlock_7_0=ruleBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfStatementRule());
						}
						set(
							$current,
							"elseBlock",
							lv_elseBlock_7_0,
							"org.xtext.example.mydsl1.ADSL.Block");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExpressionAccess().getAssignmentParserRuleCall());
	}
	this_Assignment_0=ruleAssignment
	{
		$current = $this_Assignment_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleArithExpression
entryRuleArithExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithExpressionRule()); }
	iv_ruleArithExpression=ruleArithExpression
	{ $current=$iv_ruleArithExpression.current; }
	EOF;

// Rule ArithExpression
ruleArithExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getArithExpressionAccess().getOrParserRuleCall());
	}
	this_Or_0=ruleOr
	{
		$current = $this_Or_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleAssignment
entryRuleAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignmentRule()); }
	iv_ruleAssignment=ruleAssignment
	{ $current=$iv_ruleAssignment.current; }
	EOF;

// Rule Assignment
ruleAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAssignmentAccess().getSelectionExpressionParserRuleCall_0());
		}
		this_SelectionExpression_0=ruleSelectionExpression
		{
			$current = $this_SelectionExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAssignmentAccess().getAssignmentLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='='
			{
				newLeafNode(otherlv_2, grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAssignmentAccess().getRightArithExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleArithExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssignmentRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.example.mydsl1.ADSL.ArithExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSelectionExpression
entryRuleSelectionExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectionExpressionRule()); }
	iv_ruleSelectionExpression=ruleSelectionExpression
	{ $current=$iv_ruleSelectionExpression.current; }
	EOF;

// Rule SelectionExpression
ruleSelectionExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSelectionExpressionAccess().getTerminalExpressionParserRuleCall_0());
		}
		this_TerminalExpression_0=ruleTerminalExpression
		{
			$current = $this_TerminalExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getSelectionExpressionAccess().getMemberSelectionReceiverAction_1_0(),
						$current);
				}
			)
			otherlv_2='.'
			{
				newLeafNode(otherlv_2, grammarAccess.getSelectionExpressionAccess().getFullStopKeyword_1_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSelectionExpressionRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getSelectionExpressionAccess().getMemberMemberCrossReference_1_2_0());
					}
				)
			)
			(
				(
					(
						lv_ispar_4_0='['
						{
							newLeafNode(lv_ispar_4_0, grammarAccess.getSelectionExpressionAccess().getIsparLeftSquareBracketKeyword_1_3_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSelectionExpressionRule());
							}
							setWithLastConsumed($current, "ispar", true, "[");
						}
					)
				)
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSelectionExpressionRule());
							}
						}
						otherlv_5=RULE_ID
						{
							newLeafNode(otherlv_5, grammarAccess.getSelectionExpressionAccess().getParXClassCrossReference_1_3_1_0());
						}
					)
				)
				otherlv_6=']'
				{
					newLeafNode(otherlv_6, grammarAccess.getSelectionExpressionAccess().getRightSquareBracketKeyword_1_3_2());
				}
			)?
			(
				(
					(
						lv_methodinvocation_7_0='('
						{
							newLeafNode(lv_methodinvocation_7_0, grammarAccess.getSelectionExpressionAccess().getMethodinvocationLeftParenthesisKeyword_1_4_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSelectionExpressionRule());
							}
							setWithLastConsumed($current, "methodinvocation", true, "(");
						}
					)
				)
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getSelectionExpressionAccess().getArgsExpressionParserRuleCall_1_4_1_0_0());
							}
							lv_args_8_0=ruleExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSelectionExpressionRule());
								}
								add(
									$current,
									"args",
									lv_args_8_0,
									"org.xtext.example.mydsl1.ADSL.Expression");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_9=','
						{
							newLeafNode(otherlv_9, grammarAccess.getSelectionExpressionAccess().getCommaKeyword_1_4_1_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getSelectionExpressionAccess().getArgsExpressionParserRuleCall_1_4_1_1_1_0());
								}
								lv_args_10_0=ruleExpression
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSelectionExpressionRule());
									}
									add(
										$current,
										"args",
										lv_args_10_0,
										"org.xtext.example.mydsl1.ADSL.Expression");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
				)?
				otherlv_11=')'
				{
					newLeafNode(otherlv_11, grammarAccess.getSelectionExpressionAccess().getRightParenthesisKeyword_1_4_2());
				}
			)?
		)*
	)
;

// Entry rule entryRuleOr
entryRuleOr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrRule()); }
	iv_ruleOr=ruleOr
	{ $current=$iv_ruleOr.current; }
	EOF;

// Rule Or
ruleOr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOrAccess().getAndParserRuleCall_0());
		}
		this_And_0=ruleAnd
		{
			$current = $this_And_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getOrAccess().getOrLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='||'
			{
				newLeafNode(otherlv_2, grammarAccess.getOrAccess().getVerticalLineVerticalLineKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.example.mydsl1.ADSL.And");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAnd
entryRuleAnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndRule()); }
	iv_ruleAnd=ruleAnd
	{ $current=$iv_ruleAnd.current; }
	EOF;

// Rule And
ruleAnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndAccess().getEqualityParserRuleCall_0());
		}
		this_Equality_0=ruleEquality
		{
			$current = $this_Equality_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAndAccess().getAndLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='&&'
			{
				newLeafNode(otherlv_2, grammarAccess.getAndAccess().getAmpersandAmpersandKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAndAccess().getRightEqualityParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleEquality
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.example.mydsl1.ADSL.Equality");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEquality
entryRuleEquality returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualityRule()); }
	iv_ruleEquality=ruleEquality
	{ $current=$iv_ruleEquality.current; }
	EOF;

// Rule Equality
ruleEquality returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0());
		}
		this_Comparison_0=ruleComparison
		{
			$current = $this_Comparison_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEqualityAccess().getEqualityLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1='=='
						{
							newLeafNode(lv_op_2_1, grammarAccess.getEqualityAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEqualityRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2='!='
						{
							newLeafNode(lv_op_2_2, grammarAccess.getEqualityAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEqualityRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleComparison
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.example.mydsl1.ADSL.Comparison");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleComparison
entryRuleComparison returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComparisonRule()); }
	iv_ruleComparison=ruleComparison
	{ $current=$iv_ruleComparison.current; }
	EOF;

// Rule Comparison
ruleComparison returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0());
		}
		this_PlusOrMinus_0=rulePlusOrMinus
		{
			$current = $this_PlusOrMinus_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getComparisonAccess().getComparisonLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1='<='
						{
							newLeafNode(lv_op_2_1, grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2='>='
						{
							newLeafNode(lv_op_2_2, grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
						    |
						lv_op_2_3='<'
						{
							newLeafNode(lv_op_2_3, grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_3, null);
						}
						    |
						lv_op_2_4='>'
						{
							newLeafNode(lv_op_2_4, grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_1_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getComparisonRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_4, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getComparisonAccess().getRightPlusOrMinusParserRuleCall_1_2_0());
					}
					lv_right_3_0=rulePlusOrMinus
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComparisonRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.example.mydsl1.ADSL.PlusOrMinus");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePlusOrMinus
entryRulePlusOrMinus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlusOrMinusRule()); }
	iv_rulePlusOrMinus=rulePlusOrMinus
	{ $current=$iv_rulePlusOrMinus.current; }
	EOF;

// Rule PlusOrMinus
rulePlusOrMinus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0());
		}
		this_MulOrDiv_0=ruleMulOrDiv
		{
			$current = $this_MulOrDiv_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getPlusOrMinusAccess().getPlusLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='+'
					{
						newLeafNode(otherlv_2, grammarAccess.getPlusOrMinusAccess().getPlusSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getPlusOrMinusAccess().getMinusLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='-'
					{
						newLeafNode(otherlv_4, grammarAccess.getPlusOrMinusAccess().getHyphenMinusKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPlusOrMinusAccess().getRightMulOrDivParserRuleCall_1_1_0());
					}
					lv_right_5_0=ruleMulOrDiv
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPlusOrMinusRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"org.xtext.example.mydsl1.ADSL.MulOrDiv");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMulOrDiv
entryRuleMulOrDiv returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMulOrDivRule()); }
	iv_ruleMulOrDiv=ruleMulOrDiv
	{ $current=$iv_ruleMulOrDiv.current; }
	EOF;

// Rule MulOrDiv
ruleMulOrDiv returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMulOrDivAccess().getPrimaryParserRuleCall_0());
		}
		this_Primary_0=rulePrimary
		{
			$current = $this_Primary_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getMulOrDivAccess().getMulOrDivLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1='*'
						{
							newLeafNode(lv_op_2_1, grammarAccess.getMulOrDivAccess().getOpAsteriskKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMulOrDivRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2='/'
						{
							newLeafNode(lv_op_2_2, grammarAccess.getMulOrDivAccess().getOpSolidusKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMulOrDivRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMulOrDivAccess().getRightPrimaryParserRuleCall_1_2_0());
					}
					lv_right_3_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMulOrDivRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.example.mydsl1.ADSL.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePrimary
entryRulePrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	iv_rulePrimary=rulePrimary
	{ $current=$iv_rulePrimary.current; }
	EOF;

// Rule Primary
rulePrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryAccess().getExpressionParserRuleCall_0_1());
			}
			this_Expression_1=ruleExpression
			{
				$current = $this_Expression_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryAccess().getNotAction_1_0(),
						$current);
				}
			)
			otherlv_4='!'
			{
				newLeafNode(otherlv_4, grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryAccess().getExpressionPrimaryParserRuleCall_1_2_0());
					}
					lv_expression_5_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryRule());
						}
						set(
							$current,
							"expression",
							lv_expression_5_0,
							"org.xtext.example.mydsl1.ADSL.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getSelectionExpressionParserRuleCall_2());
		}
		this_SelectionExpression_6=ruleSelectionExpression
		{
			$current = $this_SelectionExpression_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTerminalExpression
entryRuleTerminalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTerminalExpressionRule()); }
	iv_ruleTerminalExpression=ruleTerminalExpression
	{ $current=$iv_ruleTerminalExpression.current; }
	EOF;

// Rule TerminalExpression
ruleTerminalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTerminalExpressionAccess().getStringConstantAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0=RULE_STRING
					{
						newLeafNode(lv_value_1_0, grammarAccess.getTerminalExpressionAccess().getValueSTRINGTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTerminalExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTerminalExpressionAccess().getIntConstantAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTerminalExpressionAccess().getValueIntegerNegativeParserRuleCall_1_1_0());
					}
					lv_value_3_0=ruleIntegerNegative
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTerminalExpressionRule());
						}
						set(
							$current,
							"value",
							lv_value_3_0,
							"org.xtext.example.mydsl1.ADSL.IntegerNegative");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTerminalExpressionAccess().getBoolConstantAction_2_0(),
						$current);
				}
			)
			(
				(
					(
						lv_value_5_1='true'
						{
							newLeafNode(lv_value_5_1, grammarAccess.getTerminalExpressionAccess().getValueTrueKeyword_2_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTerminalExpressionRule());
							}
							setWithLastConsumed($current, "value", lv_value_5_1, null);
						}
						    |
						lv_value_5_2='false'
						{
							newLeafNode(lv_value_5_2, grammarAccess.getTerminalExpressionAccess().getValueFalseKeyword_2_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTerminalExpressionRule());
							}
							setWithLastConsumed($current, "value", lv_value_5_2, null);
						}
					)
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTerminalExpressionAccess().getDeRefAction_3_0(),
						$current);
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTerminalExpressionRule());
						}
					}
					otherlv_7=RULE_ID
					{
						newLeafNode(otherlv_7, grammarAccess.getTerminalExpressionAccess().getRefVarDefCrossReference_3_1_0());
					}
				)
			)
			otherlv_8='('
			{
				newLeafNode(otherlv_8, grammarAccess.getTerminalExpressionAccess().getLeftParenthesisKeyword_3_2());
			}
			otherlv_9=')'
			{
				newLeafNode(otherlv_9, grammarAccess.getTerminalExpressionAccess().getRightParenthesisKeyword_3_3());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTerminalExpressionAccess().getThisAction_4_0(),
						$current);
				}
			)
			otherlv_11='this'
			{
				newLeafNode(otherlv_11, grammarAccess.getTerminalExpressionAccess().getThisKeyword_4_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTerminalExpressionAccess().getNullAction_5_0(),
						$current);
				}
			)
			otherlv_13='null'
			{
				newLeafNode(otherlv_13, grammarAccess.getTerminalExpressionAccess().getNullKeyword_5_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTerminalExpressionAccess().getHereAction_6_0(),
						$current);
				}
			)
			otherlv_15='here'
			{
				newLeafNode(otherlv_15, grammarAccess.getTerminalExpressionAccess().getHereKeyword_6_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTerminalExpressionAccess().getReferenceAction_7_0(),
						$current);
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTerminalExpressionRule());
						}
					}
					otherlv_17=RULE_ID
					{
						newLeafNode(otherlv_17, grammarAccess.getTerminalExpressionAccess().getBaseVarDefCrossReference_7_1_0());
					}
				)
			)
			(
				(
					(
						lv_isarray_18_0='('
						{
							newLeafNode(lv_isarray_18_0, grammarAccess.getTerminalExpressionAccess().getIsarrayLeftParenthesisKeyword_7_2_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTerminalExpressionRule());
							}
							setWithLastConsumed($current, "isarray", true, "(");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getTerminalExpressionAccess().getParamsSelectionExpressionParserRuleCall_7_2_1_0());
						}
						lv_params_19_0=ruleSelectionExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTerminalExpressionRule());
							}
							add(
								$current,
								"params",
								lv_params_19_0,
								"org.xtext.example.mydsl1.ADSL.SelectionExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_20=')'
				{
					newLeafNode(otherlv_20, grammarAccess.getTerminalExpressionAccess().getRightParenthesisKeyword_7_2_2());
				}
			)?
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTerminalExpressionAccess().getNewAction_8_0(),
						$current);
				}
			)
			otherlv_22='new'
			{
				newLeafNode(otherlv_22, grammarAccess.getTerminalExpressionAccess().getNewKeyword_8_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTerminalExpressionAccess().getTypeVariableTypeParserRuleCall_8_2_0());
					}
					lv_type_23_0=ruleVariableType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTerminalExpressionRule());
						}
						set(
							$current,
							"type",
							lv_type_23_0,
							"org.xtext.example.mydsl1.ADSL.VariableType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_24='('
			{
				newLeafNode(otherlv_24, grammarAccess.getTerminalExpressionAccess().getLeftParenthesisKeyword_8_3());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getTerminalExpressionAccess().getArgsExpressionParserRuleCall_8_4_0_0());
						}
						lv_args_25_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTerminalExpressionRule());
							}
							add(
								$current,
								"args",
								lv_args_25_0,
								"org.xtext.example.mydsl1.ADSL.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_26=','
					{
						newLeafNode(otherlv_26, grammarAccess.getTerminalExpressionAccess().getCommaKeyword_8_4_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getTerminalExpressionAccess().getArgsExpressionParserRuleCall_8_4_1_1_0());
							}
							lv_args_27_0=ruleExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getTerminalExpressionRule());
								}
								add(
									$current,
									"args",
									lv_args_27_0,
									"org.xtext.example.mydsl1.ADSL.Expression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_28=')'
			{
				newLeafNode(otherlv_28, grammarAccess.getTerminalExpressionAccess().getRightParenthesisKeyword_8_5());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getTerminalExpressionAccess().getInitAction_9_0(),
						$current);
				}
			)
			otherlv_30='('
			{
				newLeafNode(otherlv_30, grammarAccess.getTerminalExpressionAccess().getLeftParenthesisKeyword_9_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTerminalExpressionAccess().getTypeVariableTypeParserRuleCall_9_2_0());
					}
					lv_type_31_0=ruleVariableType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTerminalExpressionRule());
						}
						set(
							$current,
							"type",
							lv_type_31_0,
							"org.xtext.example.mydsl1.ADSL.VariableType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_32=')'
			{
				newLeafNode(otherlv_32, grammarAccess.getTerminalExpressionAccess().getRightParenthesisKeyword_9_3());
			}
			otherlv_33='=>'
			{
				newLeafNode(otherlv_33, grammarAccess.getTerminalExpressionAccess().getEqualsSignGreaterThanSignKeyword_9_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTerminalExpressionAccess().getExpressionTerminalExpressionParserRuleCall_9_5_0());
					}
					lv_expression_34_0=ruleTerminalExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTerminalExpressionRule());
						}
						set(
							$current,
							"expression",
							lv_expression_34_0,
							"org.xtext.example.mydsl1.ADSL.TerminalExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleIntegerNegative
entryRuleIntegerNegative returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntegerNegativeRule()); }
	iv_ruleIntegerNegative=ruleIntegerNegative
	{ $current=$iv_ruleIntegerNegative.current; }
	EOF;

// Rule IntegerNegative
ruleIntegerNegative returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isneg_0_0='-'
				{
					newLeafNode(lv_isneg_0_0, grammarAccess.getIntegerNegativeAccess().getIsnegHyphenMinusKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntegerNegativeRule());
					}
					setWithLastConsumed($current, "isneg", true, "-");
				}
			)
		)?
		(
			(
				lv_value_1_0=RULE_INT
				{
					newLeafNode(lv_value_1_0, grammarAccess.getIntegerNegativeAccess().getValueINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntegerNegativeRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
